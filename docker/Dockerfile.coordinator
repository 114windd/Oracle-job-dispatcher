# Multi-stage build for Coordinator
FROM golang:1.24-alpine AS builder

# Set working directory
WORKDIR /app

# Install git and ca-certificates
RUN apk add --no-cache git ca-certificates

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the coordinator binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o coordinator cmd/coordinator/main.go

# Final stage - minimal image
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN adduser -D -s /bin/sh coordinator

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/coordinator .

# Change ownership to non-root user
RUN chown coordinator:coordinator /app/coordinator

# Switch to non-root user
USER coordinator

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the coordinator
CMD ["./coordinator"]
